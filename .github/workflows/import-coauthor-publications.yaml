# Hugo Blox GitHub Action to convert co-author BibTeX publications to Markdown-based webpages
name: Import Co-Author Publications From BibTeX

# Require permission to create a PR (least privilege principle)
permissions:
  contents: write
  pull-requests: write

# Run workflow when a `.bib` file is added or updated in the root folder
on:
  push:
    branches: ['main']
    paths: ['coauthor-publications.bib']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Prevent concurrent runs of this workflow
concurrency:
  group: import-coauthor-publications-${{ github.ref }}
  cancel-in-progress: true

jobs:
  hugoblox:
    if: github.repository_owner != 'HugoBlox'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      ACADEMIC_VERSION: '>=0.10.0'
      PYTHON_VERSION: '3.12'
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          # Only need recent history for co-author publication import
          fetch-depth: 1

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-academic-${{ env.ACADEMIC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-pip-academic-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "academic${{ env.ACADEMIC_VERSION }}"

      - name: Validate coauthor-publications.bib file
        if: ${{ hashFiles('coauthor-publications.bib') != '' }}
        run: |
          if [ ! -f "coauthor-publications.bib" ]; then
            echo "❌ coauthor-publications.bib file not found"
            exit 1
          fi
          echo "✅ coauthor-publications.bib file found"

      - name: Run Academic (BibTeX to Markdown Converter for Co-Author Publications)
        if: ${{ hashFiles('coauthor-publications.bib') != '' }}
        run: |
          echo "🚀 Starting co-author publication import..."
          academic import coauthor-publications.bib content/coauthor-publication/ --compact --verbose
          echo "✅ Co-author publication import completed successfully"
          
          # Verify that files were created
          if [ -d "content/coauthor-publication" ] && [ "$(ls -A content/coauthor-publication/)" ]; then
            echo "📚 Co-author publications imported: $(ls content/coauthor-publication/ | wc -l) items"
          else
            echo "⚠️ No co-author publications were imported"
          fi
        continue-on-error: false

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'feat(coauthor-publications): import latest co-author publications from BibTeX'
          title: 'Hugo Blox Builder - Import latest co-author publications from BibTeX'
          body: |
            🔄 **Automated Co-Author Publication Import**

            This PR automatically imports the latest co-author publications from `coauthor-publications.bib` to `content/coauthor-publication/`.

            **Changes:**
            - 📚 Updated co-author publication entries
            - 🏷️ Processed bibliographic data

            ---
            将最新的合作者出版物从`coauthor-publications.bib`导入到`content/coauthor-publication/`。

            📖 [View Documentation](https://github.com/GetRD/academic-file-converter)
          base: main
          labels: automated-pr, content, coauthor-publications
          branch: hugoblox-import-coauthor-publications
          delete-branch: true
          draft: false

      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "✅ Successfully created Pull Request!"
          echo "📝 Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "🔗 Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
          echo "🎯 Operation completed at $(date)"

      - name: Report workflow status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "🎉 Workflow completed successfully"
          else
            echo "❌ Workflow failed - check logs for details"
            exit 1
          fi